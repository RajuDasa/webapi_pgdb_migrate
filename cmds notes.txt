

#default username & dbname = postgres, default port: 5432
C:\Drives\E\SampleWebapi\SampleWebapi>$ docker run --name myDB -e POSTGRES_PASSWORD=postgres -e POSTGRES_DB=sample_db -d postgres:14
>docker logs myDB
>docker inspect myDB  #copy IPaddr for below host option. (another container can't access localhost)

# Pull the image
docker pull sosedoff/pgweb

# Start the container
>docker run -p 8081:8081 --name myDB_UI sosedoff/pgweb   #to connect with postgres running as independent container (host: localhost)
>docker run -p 8081:8081 --rm --net samplewebapi_default sosedoff/pgweb  #to connect with postgres running part of compose (host: db)

----- from cmd/vscode:
>dotnet ef migrations add Initial

//only tables script no DB script. DB server need not be running.
>dotnet ef dbcontext script -o Data/script.sql

---next migration:
C:\Drives\E\SampleWebapi\SampleWebapi> dotnet ef migrations add AddedUserRole

--------
#dotnet run
http://localhost:5173/weatherforecast
http://localhost:8080/usercount

-----docker build
#script-gen independent container:
C:\Drives\E\SampleWebapi>docker build -t script-gen -f BuildScript/dockerfile .
C:\Drives\E\SampleWebapi>docker run -it --rm script-gen sh
>cd out  >cat init.sql   #script generated from dbcontext

idea: passing sql generated by webapi dbContext to postgres during initialization. --SUCCESS
	Note: db is created as part of compose option (POSTGRES_DB)
compose file C:\Drives\E\SampleWebapi uses script_generator service for sql generated and shared volume b/w this service and postgres.

--------
Note: webapi not working from compose, may be it need kerstel (webserver) configured. --working: added 8080 port in dockerfile and compose
C:\Drives\E\SampleWebapi\SampleWebapi>docker build .   #use -t webapi
C:\Drives\E\SampleWebapi\SampleWebapi>docker container run -p 8080:8080 9a91a8e876f5
http://localhost:8080/weatherforecast

--------rebuild
#rebuild 2 images in compose:
(>docker compose up -d --no-deps --build script-gen web)
>docker compose build script-gen web
>docker volume rm samplewebapi_script  #to apply new migration script to db

steps: rebuild without up, remove named volume from docker.
https://stackoverflow.com/questions/33816456/how-to-tag-docker-image-with-docker-compose
https://stackoverflow.com/questions/36884991/how-to-rebuild-docker-container-in-docker-compose-yml
--------
Note: docker-compose build will read your docker-compose.yml, look for all services containing the build: option
	context: option in compose holds the path (. as current dir), used as relative path for dockerfile and COPY/ADD sections in dockerfile.
Note: use versioned image than latest.
NOte: >docker system prune	  #to remove dangling,stopped containers,images etc

https://stackoverflow.com/questions/63455621/copy-failed-stat-var-lib-docker-tmp-docker-xxx-no-such-file-or-directory